{"version":3,"sources":["assets/loadingGif.gif","util/apiCalls.js","util/apiCleaners.js","actions/index.js","components/SearchForm/SearchForm.js","components/ArtworkResult/ArtworkResult.js","components/Container/Container.js","components/Nav/Nav.js","components/ArtworkModal/ArtworkModal.js","components/App/App.js","serviceWorker.js","reducers/index.js","reducers/results.js","reducers/isLoading.js","reducers/favorites.js","reducers/isFavorites.js","index.js","localStorage.js"],"names":["module","exports","getData","search","type","a","fetch","response","json","data","console","log","message","Error","cleanerHandler","label","artist","term","mutableData","results","cleanAlbums","cleanAlbum","filterArtist","sort","b","releaseYear","filterResults","cleanSingles","cleanSingle","cleanArtist","cleanMovies","cleanMovie","cleanApp","slice","cleanPodcast","cleanShows","cleanTvShow","cleanBook","cleanAudiobook","cleanData","filter","result","upperTerm","toUpperCase","replace","normalize","name","includes","flattedTerm","artistName","cleanArtwork","artworkUrl","resolution","splitUrl","split","splice","length","joinUrl","join","trackCount","map","artistId","artworkUrl100","collectionId","collectionName","releaseDate","hqArtwork","id","parseInt","trackName","trackId","setResults","toggleLoading","boolean","addFavorite","item","removeFavorite","toggleFavorites","SearchForm","handleChange","e","setState","target","value","JSON","parse","handleClick","state","props","resetState","handleSubmit","preventDefault","this","artistInput","placeholder","onChange","className","onSubmit","onClick","Component","connect","dispatch","bindActionCreators","Artwork","loadHandler","isLoaded","routeHandler","isFavorites","show","display","alt","src","loadingGif","to","style","onLoad","isLoading","favorites","mapCards","index","key","cardsHandler","loader","rel","as","width","toggleStyling","exact","path","componentDidMount","isFavorite","find","favorite","componentWillUnmount","change","handleToggle","heartToggle","href","download","App","render","match","params","pathname","Boolean","window","location","hostname","RootReducer","combineReducers","action","persistedState","serializedState","localStorage","getItem","error","loadState","store","createStore","rootReducer","composeWithDevTools","subscribe","stringify","setItem","saveState","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d4dba75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingGif.95cf96ca.gif\";","const baseSearchUrl = 'https://itunes.apple.com/search?term=';\nconst baseLookupUrl = 'https://itunes.apple.com/lookup?id=';\n\nexport const getData = async (search, type) => {\n\ttry {\n\t\tconst response = await fetch(`${baseSearchUrl}${search}&entity=${type}`);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error.message);\n\t\tthrow new Error('Failed to get results');\n\t}\n};\n\nexport const getAlbumTracks = async collectionId => {\n\ttry {\n\t\tconst response = await fetch(`${baseLookupUrl}${collectionId}&entity=song`);\n\t\tconst albumTracks = await response.json();\n\t\tconsole.log(albumTracks);\n\t\treturn albumTracks;\n\t} catch (error) {\n\t\tconsole.log(error.message);\n\t\tthrow new Error('Failed to get album tracks');\n\t}\n};\n","export const cleanerHandler = (data, label, artist, term) => {\n\tconst mutableData = [...data.results];\n\n\tif (label === 'Album') {\n\t\tconst cleanAlbums = artist\n\t\t\t? cleanAlbum(filterArtist(artist, mutableData)).sort(\n\t\t\t\t\t(a, b) => b.releaseYear - a.releaseYear\n\t\t\t  )\n\t\t\t: cleanAlbum(mutableData, term);\n\t\treturn filterResults(cleanAlbums, term);\n\t}\n\tif (label === 'Single') {\n\t\tconst cleanSingles = artist\n\t\t\t? cleanSingle(filterArtist(artist, mutableData))\n\t\t\t: cleanSingle(mutableData);\n\t\treturn filterResults(cleanSingles, term);\n\t}\n\tif (label === 'Artist') {\n\t\treturn cleanArtist(mutableData);\n\t}\n\tif (label === 'Movie') {\n\t\tconst cleanMovies = cleanMovie(mutableData);\n\t\treturn filterResults(cleanMovies, term);\n\t}\n\tif (label === 'App') {\n\t\treturn cleanApp(mutableData.slice(0, 1));\n\t}\n\tif (label === 'Podcast') {\n\t\treturn cleanPodcast(mutableData);\n\t}\n\tif (label === 'TV Show') {\n\t\tconst cleanShows = cleanTvShow(mutableData);\n\t\treturn filterResults(cleanShows, term);\n\t}\n\tif (label === 'iBook') {\n\t\treturn cleanBook(mutableData);\n\t}\n\tif (label === 'Audiobook') {\n\t\treturn cleanAudiobook(mutableData);\n\t}\n};\n\nconst filterResults = (cleanData, term) => {\n\treturn cleanData.filter(result => {\n\t\tconst upperTerm = term\n\t\t\t.toUpperCase()\n\t\t\t.replace(/ /g, '')\n\t\t\t.normalize('NFD')\n\t\t\t.replace(/[\\u0300-\\u036f]/g, '');\n\t\tconst upperName = result.name\n\t\t\t.toUpperCase()\n\t\t\t.replace(/ /g, '')\n\t\t\t.normalize('NFD')\n\t\t\t.replace(/[\\u0300-\\u036f]/g, '');\n\t\treturn upperName.includes(upperTerm);\n\t});\n};\n\nconst filterArtist = (artist, data) => {\n\treturn data.filter(result => {\n\t\tconst flattedTerm = artist\n\t\t\t.toUpperCase()\n\t\t\t.replace(/ /g, '')\n\t\t\t.normalize('NFD')\n\t\t\t.replace(/[\\u0300-\\u036f]/g, '');\n\t\tconst flattedArtistName = result.artistName\n\t\t\t.toUpperCase()\n\t\t\t.replace(/ /g, '')\n\t\t\t.normalize('NFD')\n\t\t\t.replace(/[\\u0300-\\u036f]/g, '');\n\t\treturn flattedArtistName.includes(flattedTerm);\n\t});\n};\n\nconst cleanArtwork = (artworkUrl, resolution) => {\n\tconst splitUrl = artworkUrl.split('');\n\tsplitUrl.splice(splitUrl.length - 13);\n\tconst joinUrl = splitUrl.join('');\n\tconst cleanUrl = `${joinUrl}${resolution}x${resolution}.jpg`;\n\treturn cleanUrl;\n};\n\nconst cleanAlbum = mutableData => {\n\tconst filteredData = mutableData.filter(result => result.trackCount > 5);\n\treturn filteredData.map(result => {\n\t\tconst {\n\t\t\tartistId,\n\t\t\tartistName,\n\t\t\tartworkUrl100,\n\t\t\tcollectionId,\n\t\t\tcollectionName,\n\t\t\treleaseDate,\n\t\t\ttrackCount\n\t\t} = result;\n\t\tconst cleanedData = {\n\t\t\tartistId,\n\t\t\tartist: artistName,\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tid: collectionId,\n\t\t\tname: collectionName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\ttrackCount\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanSingle = mutableData => {\n\tconst filteredData = mutableData.filter(result => result.trackCount <= 5);\n\treturn filteredData.map(result => {\n\t\tconst {\n\t\t\tartistId,\n\t\t\tartistName,\n\t\t\tartworkUrl100,\n\t\t\tcollectionId,\n\t\t\tcollectionName,\n\t\t\treleaseDate,\n\t\t\ttrackCount\n\t\t} = result;\n\t\tconst cleanedData = {\n\t\t\tartistId,\n\t\t\tartist: artistName,\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tid: collectionId,\n\t\t\tname: collectionName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\ttrackCount\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanArtist = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst {\n\t\t\tartistId,\n\t\t\tartistName,\n\t\t\tartworkUrl100,\n\t\t\tcollectionId,\n\t\t\tcollectionName,\n\t\t\treleaseDate,\n\t\t\ttrackCount\n\t\t} = result;\n\t\tconst cleanedData = {\n\t\t\tartistId,\n\t\t\tartist: artistName,\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tid: collectionId,\n\t\t\tname: collectionName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\ttrackCount\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanMovie = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst { artworkUrl100, trackName, releaseDate, trackId } = result;\n\n\t\tconst cleanedData = {\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tname: trackName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\tid: trackId\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanPodcast = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst { artworkUrl100, trackName, releaseDate, collectionId } = result;\n\n\t\tconst cleanedData = {\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tname: trackName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\tid: collectionId\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanTvShow = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst { artworkUrl100, releaseDate, collectionName, collectionId } = result;\n\n\t\tconst cleanedData = {\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tname: collectionName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\tid: collectionId\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanBook = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst {\n\t\t\tartworkUrl100,\n\t\t\ttrackName,\n\t\t\treleaseDate,\n\t\t\tartistName,\n\t\t\tcollectionId\n\t\t} = result;\n\n\t\tconst cleanedData = {\n\t\t\tartist: artistName,\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tname: trackName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\tid: collectionId\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanAudiobook = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst {\n\t\t\tartworkUrl100,\n\t\t\tcollectionName,\n\t\t\treleaseDate,\n\t\t\tartistName,\n\t\t\tcollectionId\n\t\t} = result;\n\n\t\tconst cleanedData = {\n\t\t\tartist: artistName,\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tname: collectionName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\tid: collectionId\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n\nconst cleanApp = mutableData => {\n\treturn mutableData.map(result => {\n\t\tconst { artworkUrl100, trackName, releaseDate, trackId } = result;\n\n\t\tconst cleanedData = {\n\t\t\thqArtwork: cleanArtwork(artworkUrl100, 10000),\n\t\t\tname: trackName,\n\t\t\treleaseYear: parseInt(releaseDate.slice(0, 4)),\n\t\t\tid: trackId\n\t\t};\n\t\treturn cleanedData;\n\t});\n};\n","export const setResults = results => ({\n\ttype: 'SET_RESULTS',\n\tresults\n});\n\nexport const toggleLoading = boolean => ({\n\ttype: 'TOGGLE_LOADING',\n\tboolean\n});\n\nexport const addFavorite = item => ({\n\ttype: 'ADD_FAVORITE',\n\titem\n});\n\nexport const removeFavorite = id => ({\n\ttype: 'REMOVE_FAVORITE',\n\tid\n});\n\nexport const toggleFavorites = () => ({\n\ttype: 'TOGGLE_FAVORITES'\n});\n","import React, { Component } from 'react';\nimport './SearchForm.scss';\nimport { getData } from '../../util/apiCalls';\nimport { cleanerHandler } from '../../util/apiCleaners';\nimport { connect } from 'react-redux';\nimport { setResults, toggleLoading } from '../../actions';\nimport { bindActionCreators } from 'redux';\n\nclass SearchForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttype: 'album',\n\t\t\tterm: '',\n\t\t\tartist: '',\n\t\t\tlabel: 'Album'\n\t\t};\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\n\t\tif (e.target.name === 'type') {\n\t\t\tconst value = JSON.parse(e.target.value);\n\t\t\tthis.setState({\n\t\t\t\ttype: value[0],\n\t\t\t\tlabel: value[1]\n\t\t\t});\n\t\t}\n\t};\n\n\thandleClick = async () => {\n\t\tconst { term, type, label, artist } = this.state;\n\t\tconst { setResults, toggleLoading } = this.props;\n\t\tconst data = await getData(term, type);\n\t\tsetResults([]);\n\t\ttoggleLoading(true);\n\t\tconst cleanData = cleanerHandler(data, label, artist, term);\n\t\tsetResults(cleanData);\n\t\ttoggleLoading(false);\n\t\tconsole.log(cleanerHandler(data, label, artist, term));\n\t\tthis.resetState();\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t};\n\n\tresetState = () => {\n\t\tthis.setState({\n\t\t\tterm: '',\n\t\t\tartist: ''\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { term, artist, label } = this.state;\n\n\t\tconst artistInput = (\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='artist'\n\t\t\t\t\tplaceholder='Enter Artist (Optional)'\n\t\t\t\t\tvalue={artist}\n\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<form className='SearchForm' onSubmit={e => this.handleSubmit(e)}>\n\t\t\t\t<div className='inputsSection'>\n\t\t\t\t\t<select name='type' onChange={e => this.handleChange(e)}>\n\t\t\t\t\t\t<option value='[\"album\", \"Album\"]'>Album</option>\n\t\t\t\t\t\t<option value='[\"album\", \"Single\"]'>Single</option>\n\t\t\t\t\t\t<option value='[\"album\", \"Artist\"]'>Artist</option>\n\t\t\t\t\t\t<option value='[\"tvSeason\", \"TV Show\"]'>TV Show</option>\n\t\t\t\t\t\t<option value='[\"movie\", \"Movie\"]'>Movie</option>\n\t\t\t\t\t\t<option value='[\"podcast\", \"Podcast\"]'>Podcast</option>\n\t\t\t\t\t\t<option value='[\"ebook\", \"iBook\"]'>iBook</option>\n\t\t\t\t\t\t<option value='[\"audiobook\", \"Audiobook\"]'>Audiobook</option>\n\t\t\t\t\t\t<option value='[\"software\", \"App\"]'>App</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='term'\n\t\t\t\t\t\tplaceholder={`Enter ${label}`}\n\t\t\t\t\t\tvalue={term}\n\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t\t{(label === 'Single' || label === 'Album') && artistInput}\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.handleClick}>FIND ARTWORK</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ setResults, toggleLoading }, dispatch);\n};\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(SearchForm);\n","import React, { Component } from 'react';\nimport './ArtworkResult.scss';\nimport loadingGif from '../../assets/loadingGif.gif';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Artwork extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisLoaded: false\n\t\t};\n\t}\n\n\tloadHandler = () => {\n\t\tthis.setState({\n\t\t\tisLoaded: true\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { isLoaded } = this.state;\n\t\tconst { name, hqArtwork, id, isFavorites } = this.props;\n\t\tconst routeHandler = isFavorites ? 'favorites' : 'search';\n\t\tconst show = isLoaded ? { display: 'block' } : { display: 'none' };\n\t\treturn (\n\t\t\t<article className='ArtworkResult'>\n\t\t\t\t{!this.state.isLoaded && <img alt='loading gif' src={loadingGif} />}\n\t\t\t\t<Link to={`/${routeHandler}/${id}`}>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt={`${name} album artwork`}\n\t\t\t\t\t\tsrc={hqArtwork}\n\t\t\t\t\t\tstyle={show}\n\t\t\t\t\t\tonLoad={this.loadHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ isFavorites }) => ({\n\tisFavorites\n});\n\nexport default connect(mapStateToProps)(Artwork);\n","import React from 'react';\nimport './Container.scss';\nimport ArtworkResult from '../ArtworkResult/ArtworkResult';\nimport loadingGif from '../../assets/loadingGif.gif';\nimport { connect } from 'react-redux';\n\nconst Container = ({ results, isLoading, isFavorites, favorites }) => {\n\tconst mapCards = type => {\n\t\treturn type.map((result, index) => {\n\t\t\tconst { name, artist, releaseYear, hqArtwork, id } = result;\n\t\t\treturn (\n\t\t\t\t<ArtworkResult\n\t\t\t\t\tkey={index}\n\t\t\t\t\tid={id}\n\t\t\t\t\tname={name}\n\t\t\t\t\tartist={artist}\n\t\t\t\t\treleaseYear={releaseYear}\n\t\t\t\t\thqArtwork={hqArtwork}\n\t\t\t\t\tisLoaded={false}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst cardsHandler = isFavorites ? mapCards(favorites) : mapCards(results);\n\n\tconst loader = (\n\t\t<img\n\t\t\trel='preload'\n\t\t\talt='loading gif'\n\t\t\tas='image'\n\t\t\tsrc={loadingGif}\n\t\t\tstyle={{ width: '600px' }}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && loader}\n\t\t\t<article className='Container'>{cardsHandler}</article>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = ({ results, isLoading, isFavorites, favorites }) => ({\n\tresults,\n\tisLoading,\n\tisFavorites,\n\tfavorites\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport './Nav.scss';\nimport { connect } from 'react-redux';\nimport { toggleFavorites } from '../../actions/index';\nimport { bindActionCreators } from 'redux';\nimport { Link, Route } from 'react-router-dom';\n\nconst Nav = ({ isFavorites, toggleFavorites }) => {\n\tconst handleClick = e => {\n\t\ttoggleFavorites();\n\t};\n\n\tconst toggleStyling = isFavorites ? 'active' : '';\n\n\treturn (\n\t\t<nav className='Nav'>\n\t\t\t<Route exact path='/(|favorites)'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h3>My List</h3>\n\t\t\t\t\t<div className={`slider-track ${toggleStyling}`}>\n\t\t\t\t\t\t<Link to={isFavorites ? '/' : 'favorites'}>\n\t\t\t\t\t\t\t<div className='slider' onClick={handleClick}></div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Route>\n\t\t\t<h2>Artworked</h2>\n\t\t\t<div></div>\n\t\t</nav>\n\t);\n};\n\nconst mapStateToProps = ({ isFavorites }) => ({\n\tisFavorites\n});\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ toggleFavorites }, dispatch);\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Nav);\n","import React, { Component } from 'react';\nimport './ArtworkModal.scss';\nimport Nav from '../Nav/Nav';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addFavorite, removeFavorite } from '../../actions/index';\n\nclass Artwork extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tchange: false,\n\t\t\tisFavorite: true\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tconst { result, favorites } = this.props;\n\t\tconst { id } = result;\n\t\tthis.setState({\n\t\t\tisFavorite: favorites.find(favorite => favorite.id === id) ? true : false\n\t\t});\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tconst { favorites, removeFavorite, addFavorite, result } = this.props;\n\t\tconst { id } = result;\n\t\tif (this.state.change) {\n\t\t\tfavorites.find(favorite => favorite.id === id)\n\t\t\t\t? removeFavorite(id)\n\t\t\t\t: addFavorite(result);\n\t\t}\n\t};\n\n\thandleToggle = () => {\n\t\tthis.setState({\n\t\t\tchange: !this.state.change,\n\t\t\tisFavorite: !this.state.isFavorite\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { isFavorites, result } = this.props;\n\t\tconst { name, artist, releaseYear, hqArtwork } = result;\n\t\tconst heartToggle = this.state.isFavorite ? 'is-active' : '';\n\t\tconst routeHandler = isFavorites ? 'favorites' : '';\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Link to={`/${routeHandler}`}>\n\t\t\t\t\t<div className='modal-backdrop'></div>\n\t\t\t\t</Link>\n\t\t\t\t<Nav />\n\t\t\t\t<article className='ArtworkModal modalContainer'>\n\t\t\t\t\t<img alt={`${name} album artwork`} src={hqArtwork} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3 className='title'>{name}</h3>\n\t\t\t\t\t\t<h3 className='artist'>{artist}</h3>\n\t\t\t\t\t\t<h3 className='year'>{releaseYear}</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={hqArtwork}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\tdownload>\n\t\t\t\t\t\t\t<button className='artwork-button'>Get Artwork</button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`heart ${heartToggle}`}\n\t\t\t\t\t\t\tonClick={this.handleToggle}></div>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ favorites, isFavorites }) => ({\n\tfavorites,\n\tisFavorites\n});\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators(\n\t\t{\n\t\t\taddFavorite,\n\t\t\tremoveFavorite\n\t\t},\n\t\tdispatch\n\t);\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Artwork);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport SearchForm from '../SearchForm/SearchForm';\nimport Container from '../Container/Container';\nimport ArtworkModal from '../ArtworkModal/ArtworkModal';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\n\nclass App extends Component {\n\trender() {\n\t\tconst { results, favorites } = this.props;\n\t\treturn (\n\t\t\t<main className='App'>\n\t\t\t\t<Nav />\n\t\t\t\t<Route exact path='(|search/:id)' render={() => <SearchForm />} />\n\t\t\t\t<Route path='(|search/:id)' render={() => <Container />} />\n\t\t\t\t<Route\n\t\t\t\t\tpath='/(search|favorites)/:id'\n\t\t\t\t\trender={({ match }) => {\n\t\t\t\t\t\tconsole.log(match);\n\t\t\t\t\t\tconst id = parseInt(match.params.id);\n\t\t\t\t\t\tconst data = [...results, ...favorites];\n\t\t\t\t\t\tconst result = data.find(result => result.id === id);\n\t\t\t\t\t\treturn <ArtworkModal result={result} match={match.params} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route render={() => <Redirect to={{ pathname: '/' }} />} />\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ results, favorites }) => ({\n\tresults,\n\tfavorites\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { combineReducers } from 'redux';\nimport { isLoading } from './isLoading';\nimport { results } from './results';\nimport { favorites } from './favorites';\nimport { isFavorites } from './isFavorites';\n\nconst RootReducer = combineReducers({\n\tresults,\n\tisLoading,\n\tfavorites,\n\tisFavorites\n});\n\nexport default RootReducer;\n","export const results = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_RESULTS':\n\t\t\treturn action.results;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const isLoading = (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase 'TOGGLE_LOADING':\n\t\t\treturn action.boolean;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const favorites = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_FAVORITE':\n\t\t\treturn [...state, action.item];\n\t\tcase 'REMOVE_FAVORITE':\n\t\t\treturn state.filter(favorite => favorite.id !== action.id);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const isFavorites = (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase 'TOGGLE_FAVORITES':\n\t\t\treturn !state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { loadState, saveState } from './localStorage';\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n\tsaveState({\n\t\tresults: store.getState().results,\n\t\tfavorites: store.getState().favorites,\n\t\tisFavorites: store.getState().isFavorites\n\t});\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export const loadState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem('state');\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn JSON.parse(serializedState);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nexport const saveState = state => {\n\ttry {\n\t\tconst serializedState = JSON.stringify(state);\n\t\tlocalStorage.setItem('state', serializedState);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n"],"sourceRoot":""}